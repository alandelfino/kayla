/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignInIndexRouteImport } from './routes/sign-in/index'
import { Route as DashboardWarrantiesIndexRouteImport } from './routes/dashboard/warranties/index'
import { Route as DashboardDerivationsIndexRouteImport } from './routes/dashboard/derivations/index'
import { Route as DashboardCategoriesIndexRouteImport } from './routes/dashboard/categories/index'
import { Route as DashboardBrandsIndexRouteImport } from './routes/dashboard/brands/index'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardWarrantiesIndexRoute =
  DashboardWarrantiesIndexRouteImport.update({
    id: '/warranties/',
    path: '/warranties/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardDerivationsIndexRoute =
  DashboardDerivationsIndexRouteImport.update({
    id: '/derivations/',
    path: '/derivations/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCategoriesIndexRoute =
  DashboardCategoriesIndexRouteImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardBrandsIndexRoute = DashboardBrandsIndexRouteImport.update({
  id: '/brands/',
  path: '/brands/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/sign-in': typeof SignInIndexRoute
  '/dashboard/brands': typeof DashboardBrandsIndexRoute
  '/dashboard/categories': typeof DashboardCategoriesIndexRoute
  '/dashboard/derivations': typeof DashboardDerivationsIndexRoute
  '/dashboard/warranties': typeof DashboardWarrantiesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/sign-in': typeof SignInIndexRoute
  '/dashboard/brands': typeof DashboardBrandsIndexRoute
  '/dashboard/categories': typeof DashboardCategoriesIndexRoute
  '/dashboard/derivations': typeof DashboardDerivationsIndexRoute
  '/dashboard/warranties': typeof DashboardWarrantiesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/sign-in/': typeof SignInIndexRoute
  '/dashboard/brands/': typeof DashboardBrandsIndexRoute
  '/dashboard/categories/': typeof DashboardCategoriesIndexRoute
  '/dashboard/derivations/': typeof DashboardDerivationsIndexRoute
  '/dashboard/warranties/': typeof DashboardWarrantiesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/derivations'
    | '/dashboard/warranties'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/dashboard/brands'
    | '/dashboard/categories'
    | '/dashboard/derivations'
    | '/dashboard/warranties'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/sign-in/'
    | '/dashboard/brands/'
    | '/dashboard/categories/'
    | '/dashboard/derivations/'
    | '/dashboard/warranties/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  SignInIndexRoute: typeof SignInIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/warranties/': {
      id: '/dashboard/warranties/'
      path: '/warranties'
      fullPath: '/dashboard/warranties'
      preLoaderRoute: typeof DashboardWarrantiesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/derivations/': {
      id: '/dashboard/derivations/'
      path: '/derivations'
      fullPath: '/dashboard/derivations'
      preLoaderRoute: typeof DashboardDerivationsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/categories/': {
      id: '/dashboard/categories/'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/brands/': {
      id: '/dashboard/brands/'
      path: '/brands'
      fullPath: '/dashboard/brands'
      preLoaderRoute: typeof DashboardBrandsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardBrandsIndexRoute: typeof DashboardBrandsIndexRoute
  DashboardCategoriesIndexRoute: typeof DashboardCategoriesIndexRoute
  DashboardDerivationsIndexRoute: typeof DashboardDerivationsIndexRoute
  DashboardWarrantiesIndexRoute: typeof DashboardWarrantiesIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardBrandsIndexRoute: DashboardBrandsIndexRoute,
  DashboardCategoriesIndexRoute: DashboardCategoriesIndexRoute,
  DashboardDerivationsIndexRoute: DashboardDerivationsIndexRoute,
  DashboardWarrantiesIndexRoute: DashboardWarrantiesIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  SignInIndexRoute: SignInIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
